attributes:
- beginString: '#?:[^[:space:],)]+'
  regularExpression: true
characters:
- beginString: '#'''
  regularExpression: true
- beginString: '#\'
- beginString: '#\\[^[:space:],)]+'
  regularExpression: true
- beginString: '#\backspace'
  ignoreCase: true
- beginString: '#\linefeed'
  ignoreCase: true
- beginString: '#\newline'
  ignoreCase: true
- beginString: '#\page'
  ignoreCase: true
- beginString: '#\return'
  ignoreCase: true
- beginString: '#\rubout'
  ignoreCase: true
- beginString: '#\tab'
  ignoreCase: true
commands: []
commentDelimiters:
  beginDelimiter: '#|'
  endDelimiter: '|#'
  inlineDelimiter: ;
comments: []
completions: []
extensions:
- keyString: lisp
- keyString: lsp
- keyString: el
- keyString: clj
- keyString: edn
filenames: []
interpreters:
- keyString: lua
keywords:
- beginString: (?<=\()[^[:space:],)]+
  regularExpression: true
kind: code
metadata:
  author: 1024jp
  description: general Lisp syntax for common Lisp and other Lisp dialects
  distributionURL: https://coteditor.com
  lastModified: '2023-05-05'
  license: Same as CotEditor
  version: 1.2.0
numbers:
- beginString: '#b[01][01_]*\b'
  ignoreCase: true
  regularExpression: true
- beginString: '#o[0-7][0-7_]*\b'
  ignoreCase: true
  regularExpression: true
- beginString: '#x[0-9a-f][0-9a-f_]*\b'
  ignoreCase: true
  regularExpression: true
- beginString: (\b|[-+])[0-9][0-9./_]*([ed][-+]?\d+)?\b
  ignoreCase: true
  regularExpression: true
outlineMenu:
- beginString: ([\t ]*)\(defmacro\S+(\S+)
  description: macro
  keyString: '$1macro: $2'
- beginString: ([\t ]*)\(defun\S+(\S+)
  description: function
  keyString: $1$2
strings:
- beginString: '"'
  endString: '"'
types: []
values:
- beginString: f
  ignoreCase: true
- beginString: nil
  ignoreCase: true
- beginString: pi
  ignoreCase: true
- beginString: t
  ignoreCase: true
variables: []
