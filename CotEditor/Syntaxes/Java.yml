attributes:
- beginString: '@[A-Z][a-zA-Z]+\b'
  regularExpression: true
- beginString: '@After'
- beginString: '@AfterClass'
- beginString: '@Before'
- beginString: '@BeforeClass'
- beginString: '@Deprecated'
- beginString: '@Documented'
- beginString: '@Inherited'
- beginString: '@Override'
- beginString: '@Retetion'
- beginString: '@SafeVarargs'
- beginString: '@SuppressWarnings'
- beginString: '@Target'
- beginString: '@Test'
characters:
- beginString: ''''
  endString: ''''
commands:
- beginString: (?<=\.)[a-z$_][a-zA-Z0-9$_]*(?=\()
  regularExpression: true
commentDelimiters:
  beginDelimiter: /*
  endDelimiter: '*/'
  inlineDelimiter: //
comments: []
completions: []
extensions:
- keyString: java
- keyString: jav
filenames: []
interpreters: []
keywords:
- beginString: abstract
- beginString: assert
- beginString: break
- beginString: case
- beginString: catch
- beginString: class
- beginString: continue
- beginString: default
- beginString: do
- beginString: else
- beginString: enum
- beginString: extends
- beginString: final
- beginString: finally
- beginString: for
- beginString: if
- beginString: implements
- beginString: import
- beginString: instanceof
- beginString: interface
- beginString: native
- beginString: new
- beginString: package
- beginString: private
- beginString: protected
- beginString: public
- beginString: return
- beginString: static
- beginString: strictfp
- beginString: switch
- beginString: synchronized
- beginString: throw
- beginString: throws
- beginString: transient
- beginString: try
- beginString: volatile
- beginString: while
kind: code
metadata:
  author: nakamuxu
  description: Maintained by CotEditor Project.
  distributionURL: https://coteditor.com
  lastModified: '2023-05-05'
  license: Same as CotEditor
  version: 2.2.0
numbers:
- beginString: \b((\d+\.\d*)|(\.\d+))(e[-+]?\d+)?([lfud]|ul)?\b
  ignoreCase: true
  regularExpression: true
- beginString: \b0b[01_]+([lfud]|ul)?\b
  ignoreCase: true
  regularExpression: true
- beginString: \b0x[0-9a-f_]+([lfud]|ul)?\b
  ignoreCase: true
  regularExpression: true
- beginString: \b[0-9_]+([lfud]|ul)?\b
  ignoreCase: true
  regularExpression: true
outlineMenu:
- beginString: ^([\t ]*)(class)(.*?)(?=(\{|$))
  bold: true
  description: class
  keyString: '$1$2 : $3'
- beginString: ^([\t ]*)(private)[\t ]+(.*)(?=\{)
  description: private
  keyString: ''
- beginString: ^([\t ]*)(protected)[\t ]+(.*)(?=\{)
  description: protected
  keyString: ''
- beginString: ^([\t ]*)(public)[\t ]+(.*)(?=\{)
  description: public
  keyString: ''
strings:
- beginString: '"'
  endString: '"'
types:
- beginString: boolean
- beginString: byte
- beginString: char
- beginString: double
- beginString: float
- beginString: int
- beginString: long
- beginString: short
- beginString: String
- beginString: var
- beginString: void
values:
- beginString: \b[A-Z][A-Z0-9_]+\b
  regularExpression: true
- beginString: 'false'
- beginString: NaN
- beginString: 'null'
- beginString: 'true'
variables:
- beginString: super
- beginString: this
