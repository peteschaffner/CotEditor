attributes:
- beginString: (?<=\s|\A)@[a-zA-Z][a-zA-Z0-9_]*\b
  description: annotation
  regularExpression: true
- beginString: (?<=continue|break)@[a-zA-Z][a-zA-Z0-9_]*+(?=\s|\z)
  description: label
  regularExpression: true
- beginString: '@delegate'
- beginString: '@field'
- beginString: '@file'
- beginString: '@get'
- beginString: '@MustBeDocumented'
- beginString: '@param'
- beginString: '@property'
- beginString: '@receiver'
- beginString: '@Repeatable'
- beginString: '@Retention'
- beginString: '@set'
- beginString: '@setparam'
- beginString: '@Target'
- beginString: '[a-zA-Z][a-zA-Z0-9_]*+@(?=\s)'
  description: label
  regularExpression: true
characters:
- beginString: ''''
  endString: ''''
commands: []
commentDelimiters:
  beginDelimiter: /*
  endDelimiter: '*/'
  inlineDelimiter: //
comments: []
completions: []
extensions:
- keyString: kt
- keyString: kts
filenames: []
interpreters:
- keyString: kotlin
- keyString: kotlinc
keywords:
- beginString: '!in'
- beginString: '!is'
- beginString: abstract
- beginString: actual
- beginString: annotation
- beginString: as
- beginString: as?
- beginString: braek
- beginString: by
- beginString: catch
- beginString: class
- beginString: const
- beginString: constructor
- beginString: continue
- beginString: crossinline
- beginString: data
- beginString: delegate
- beginString: do
- beginString: dynamic
- beginString: else
- beginString: enum
- beginString: expect
- beginString: external
- beginString: 'false'
- beginString: field
- beginString: final
- beginString: finally
- beginString: for
- beginString: fun
- beginString: get
- beginString: if
- beginString: import
- beginString: in
- beginString: infix
- beginString: init
- beginString: inline
- beginString: inner
- beginString: interface
- beginString: internal
- beginString: is
- beginString: it
- beginString: lateinit
- beginString: noinline
- beginString: object
- beginString: ompanion
- beginString: open
- beginString: operator
- beginString: out
- beginString: override
- beginString: package
- beginString: param
- beginString: private
- beginString: property
- beginString: protected
- beginString: public
- beginString: receiver
- beginString: reified
- beginString: return
- beginString: sealed
- beginString: set
- beginString: setparam
- beginString: suspend
- beginString: tailrec
- beginString: throw
- beginString: try
- beginString: typealias
- beginString: val
- beginString: var
- beginString: vararg
- beginString: when
- beginString: where
- beginString: while
kind: code
metadata:
  author: 1024jp
  distributionURL: https://coteditor.com
  lastModified: '2023-05-05'
  license: Same as CotEditor
  version: 1.1.0
numbers:
- beginString: \b0b[01][01_]*\b
  description: Binary
  regularExpression: true
- beginString: \b0x[0-9a-fA-F][0-9a-fA-F_]*\b
  description: Hex
  regularExpression: true
- beginString: \b[0-9][0-9_]*(L|l|ul)?\b
  description: Int
  ignoreCase: true
  regularExpression: true
- beginString: \b[0-9][0-9_]*\.[0-9][0-9_]*([eE][0-9]+)?f?\b
  description: Float
  regularExpression: true
outlineMenu:
- beginString: ^([ \t]*)(?:[a-z]+ ){0,3}(class|object) +([a-zA-Z0-9_]+)
  bold: true
  description: class or object
  keyString: $1$2
- beginString: ^([ \t]*)(?:[a-z]+ ){0,3}fun +([a-zA-Z0-9_]+\([^\)]*\))
  description: function
  keyString: $1$2
- beginString: ^([ \t]*)(?:[a-z]+ ){0,3}interface +([a-zA-Z0-9_]+)
  description: interface
  italic: true
  keyString: $1$2
strings:
- beginString: '"'
  endString: '"'
- beginString: '"""'
  endString: '"""'
types:
- beginString: Annotation
- beginString: Any
- beginString: ArithmeticException
- beginString: Array
- beginString: ArrayIndexOutOfBoundsException
- beginString: AssertionError
- beginString: Boolean
- beginString: BooleanArray
- beginString: Byte
- beginString: ByteArray
- beginString: Char
- beginString: CharArray
- beginString: CharSequence
- beginString: ClassCastException
- beginString: Comparable
- beginString: Comparator
- beginString: ConcurrentModificationException
- beginString: DeprecationLevel
- beginString: Double
- beginString: DoubleArray
- beginString: Enum
- beginString: Error
- beginString: Exception
- beginString: Float
- beginString: FloatArray
- beginString: Function
- beginString: IllegalArgumentException
- beginString: IllegalCharacterConversionException
- beginString: IllegalStateException
- beginString: IndexOutOfBoundsException
- beginString: Int
- beginString: IntArray
- beginString: KotlinNullPointerException
- beginString: KotlinVersion
- beginString: Lazy
- beginString: LazyThreadSafetyMode
- beginString: Long
- beginString: LongArray
- beginString: NoSuchElementException
- beginString: Nothing
- beginString: NotImplementedError
- beginString: NoWhenBranchMatchedException
- beginString: NullPointerException
- beginString: Number
- beginString: NumberFormatException
- beginString: OutOfMemoryError
- beginString: Pair
- beginString: Result
- beginString: RuntimeException
- beginString: Short
- beginString: ShortArray
- beginString: String
- beginString: Synchronized
- beginString: Throwable
- beginString: Triple
- beginString: TypeCastException
- beginString: UByte
- beginString: UByteArray
- beginString: UInt
- beginString: UIntArray
- beginString: ULong
- beginString: ULongArray
- beginString: UninitializedPropertyAccessException
- beginString: Unit
- beginString: UnsupportedOperationException
- beginString: UShort
- beginString: UShortArray
- beginString: Volatile
values:
- beginString: 'false'
- beginString: 'null'
- beginString: 'true'
variables:
- beginString: '`'
  endString: '`'
- beginString: super
- beginString: this
