attributes: []
characters:
- beginString: ''''
  endString: ''''
- beginString: ''''''''
  endString: ''''''''
- beginString: ///
  endString: ///
commands: []
commentDelimiters:
  beginDelimiter: '###'
  endDelimiter: '###'
  inlineDelimiter: '#'
comments: []
completions: []
extensions:
- keyString: coffee
filenames: []
interpreters:
- keyString: coffee
keywords:
- beginString: and
- beginString: break
- beginString: by
- beginString: catch
- beginString: class
- beginString: continue
- beginString: do
- beginString: else
- beginString: extends
- beginString: finally
- beginString: for
- beginString: if
- beginString: in
- beginString: inst
- beginString: instanceof
- beginString: is
- beginString: loop
- beginString: new
- beginString: not
- beginString: of
- beginString: or
- beginString: return
- beginString: super
- beginString: switch
- beginString: then
- beginString: this
- beginString: throw
- beginString: try
- beginString: typeof
- beginString: unless
- beginString: until
- beginString: when
- beginString: while
kind: code
metadata:
  author: 1024jp
  distributionURL: https://coteditor.com
  lastModified: '2023-05-05'
  license: Same as CotEditor
  version: 1.5.0
numbers:
- beginString: \b0[bB][01][01_]*n?\b
  description: binary
  regularExpression: true
- beginString: \b0[oO][0-7][0-7_]*n?\b
  description: octal
  regularExpression: true
- beginString: \b0[xX][0-9a-fA-F][0-9a-fA-F_]*n?\b
  description: hexadecimal
  regularExpression: true
- beginString: \b[0-9][0-9_]*(\.[0-9]*)?([eE][-+]?[1-9][0-9_]*)?\b
  regularExpression: true
- beginString: \b\.[0-9]*?([eE][-+]?[1-9][0-9_]*)?\b
  regularExpression: true
outlineMenu:
- beginString: '^([\t ]*\w+): (.*)->'
  description: function
  keyString: $1
- beginString: ^([\t ]*\w+)[\t ]= (.*)->
  description: function
  keyString: $1
- beginString: ^(\w*::\w*) (.*)->
  description: function
  keyString: $1
- beginString: ^class (.*)
  bold: true
  description: class
  keyString: $1
strings:
- beginString: '"'
  endString: '"'
types:
- beginString: '@[a-zA-Z0-9$_]*'
  regularExpression: true
values:
- beginString: 'false'
- beginString: Infinity
- beginString: NaN
- beginString: 'no'
- beginString: 'null'
- beginString: 'off'
- beginString: 'on'
- beginString: 'true'
- beginString: undefined
- beginString: 'yes'
variables:
- beginString: this
